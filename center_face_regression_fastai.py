# -*- coding: utf-8 -*-
"""center_face_regression_fastai.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TPJAjxX1NV-Nn_WLChJed2Ezjfu8kkyw
"""

#### using biwi kincet head pose dataset
from fastai.vision.all import *
import matplotlib.pyplot as plt
import numpy as np

path = untar_data(URLs.BIWI_HEAD_POSE)

path.ls()

path

(path/'01').ls()

### from image path to the pose file

img_files = get_image_files(path)
def img2pose(x): return Path(f'{str(x)[:-7]}pose.txt')
img2pose(img_files[0])

im = PILImage.create(img_files[0])
im.shape
im.to_thumb(160)

cal = np.genfromtxt(path/'01'/'rgb.cal', skip_footer=6)

def get_ctr(f):
  ctr = np.genfromtxt(img2pose(f), skip_header=3)
  c1 = ctr[0] * cal[0][0]/ctr[2] + cal[0][2]
  c2 = ctr[1] * cal[1][1]/ctr[2] + cal[1][2]
  return tensor([c1,c2])

get_ctr(img_files[0])

biwi = DataBlock(
 blocks=(ImageBlock, PointBlock),
 get_items=get_image_files,
 get_y=get_ctr,
 splitter=FuncSplitter(lambda o: o.parent.name=='13'),
 batch_tfms=[*aug_transforms(size=(240,320)),
 Normalize.from_stats(*imagenet_stats)]
)

dls = biwi.dataloaders(path)

dls.show_batch(max_n=30,figsize=(8,6))

xb, yb = dls.one_batch()
xb.shape, yb.shape

learn = cnn_learner(dls, resnet18, y_range=(-1,1))

def sigmoid_range(x, lo, hi): return torch.sigmoid(x) * (hi-lo) + lo

dls.loss_func

min_lr = learn.lr_find()

min_lr

learn.fit_one_cycle(5, min_lr)

from fastai.metrics import R2Score

learn.metrics = [R2Score()]

learn.metrics

learn.fit_one_cycle(5, min_lr)

learn.show_results(ds_idx=1, max_n=3, figsize=(6,8))

